---
- hosts: routers
  tasks:
    - name: Configure packet forwarding
      lineinfile:
        path: /etc/sysctl.conf
        line: net.ipv4.ip_forward=1
        insertafter: EOF
    - name: Apply sysctl config-file
      shell: sysctl -p
    #- name: Update apt
    #  ignore_errors: true
    #    apt:
    #      update_cahe: yes
    - name: Install package
      apt:
        pkg:
          - iptables-*
          - strongswan
- hosts: 200.100.200.100
  tasks:
    - name: Configure GRE Tunnel
      copy:
        src: ./FW_gre.up
        dest: /etc/FW_gre.up
        mode: "0777"
    - name: Start GRE tunnel
      shell: /etc/FW_gre.up
      ignore_errors: true
    - name: Set CronTab
      lineinfile:
        path: /etc/crontab
        line: "@reboot root /etc/FW_gre.up"
        insertafter: EOF
    - name: Ipsec Config
      copy:
        src: ./ipsec_FW.conf
        dest: /etc/ipsec.conf
        mode: "0655"
    - name: Ipsec secrets
      lineinfile:
        path: /etc/ipsec.secrets
        line: '200.100.100.100 200.100.200.100 PSK : "2022"'
        insertafter: OEF
    - name: Ipsec Start
      shell: ipsec start
      ignore_errors: true
    - name: Create static IP routes
      shell: ip route add 192.168.0.0/16 via 10.5.5.1
      ignore_errors: true
    - name: Check hostname
      command: hostname
      register: hostname
    - name: Set hostnames
      hostname:
        name: FW
      when: hostname.stdout != "FW"
    - name: Reboot after rename
      reboot:
      when: hostname.stdout != "FW"
    - name: Configure iptables
      iptables:
        table: nat
        chain: POSTROUTING
        src_range: 172.20.0.0-172.20.255.255
        out_interface: ens192
        jump: MASQUERADE
    - name: Saving iptables
      #shell: iptables-save > /etc/iptables/rules.v4
      community.general.iptables_state:
        state: saved
        path: /etc/iptables/rules.v4
#- hosts: 172.20.30.20
#  tasks:
#    - name: Docker Deploy
#      docker_container:
#        name: WebSite
#        state: started
#        image: beezzlot/docker-test
#        ports:
#          - "80:8080"

    
    
- hosts: 200.100.100.100
  tasks:
    - name: Configure GRE Tunnel
      copy:
        src: ./CSR_gre.up
        dest: /etc/CSR_gre.up
        mode: "0777"
    - name: Start GRE tunnel
      shell: /etc/CSR_gre.up
      ignore_errors: true
    - name: Set CronTab
      lineinfile:
        path: /etc/crontab
        line: "@reboot root /etc/CSR_gre.up"
        insertafter: EOF
    - name: Configure GRE Tunnel
      copy:
        src: ./FW_gre.up
        dest: /etc/FW_gre.up
        mode: "0777"
    - name: Start GRE tunnel
      shell: /etc/FW_gre.up
      ignore_errors: true
    - name: Set CronTab
      lineinfile:
        path: /etc/crontab
        line: "@reboot root /etc/CSR_gre.up"
        insertafter: EOF
    - name: Ipsec Config
      copy:
        src: ./ipsec_CSR.conf
        dest: /etc/ipsec.conf
        mode: "0655"
    - name: Ipsec secrets
      lineinfile:
        path: /etc/ipsec.secrets
        line: '200.100.100.100 200.100.200.100 PSK : "2022"'
        insertafter: EOF
    - name: Ipsec Start
      shell: ipsec start
      ignore_errors: true
    - name: Create static IP routes
      shell: ip route add 172.20.0.0/16 via 10.5.5.2
      ignore_errors: true
    - name: Check hostname
      command: hostname
      register: hostname
    - name: Set hostnames
      hostname:
        name: CSR
      when: hostname.stdout != "CSR"
    - name: Reboot after rename
      reboot:
      when: hostname.stdout != "CSR"
    - name: Configure iptables
      iptables:
        table: nat
        chain: POSTROUTING
        src_range: 192.168.0.0-192.168.255.255
        out_interface: ens192
        jump: MASQUERADE
    - name: Saving iptables
      #shell: iptables-save > /etc/iptables/rules.v4
      community.general.iptables_state:
        state: saved
        path: /etc/iptables/rules.v4
 
